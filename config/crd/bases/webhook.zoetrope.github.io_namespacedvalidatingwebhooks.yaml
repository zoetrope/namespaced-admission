
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: namespacedvalidatingwebhooks.webhook.zoetrope.github.io
spec:
  group: webhook.zoetrope.github.io
  names:
    kind: NamespacedValidatingWebhook
    listKind: NamespacedValidatingWebhookList
    plural: namespacedvalidatingwebhooks
    singular: namespacedvalidatingwebhook
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: NamespacedValidatingWebhook is the Schema for the namespacedvalidatingwebhooks
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NamespacedValidatingWebhookSpec defines the desired state
              of NamespacedValidatingWebhook
            properties:
              webhooks:
                description: Webhooks is a list of webhooks and the affected resources
                  and operations.
                items:
                  description: ValidatingWebhook describes an admission webhook and
                    the resources and operations it applies to.
                  properties:
                    admissionReviewVersions:
                      description: AdmissionReviewVersions is an ordered list of preferred
                        `AdmissionReview` versions the Webhook expects.
                      items:
                        type: string
                      type: array
                    clientConfig:
                      description: ClientConfig defines how to communicate with the
                        hook.
                      properties:
                        caBundle:
                          description: '`caBundle` is a PEM encoded CA bundle which
                            will be used to validate the webhook''s server certificate.
                            If unspecified, system trust roots on the apiserver are
                            used.'
                          format: byte
                          type: string
                        service:
                          description: "`service` is a reference to the service for
                            this webhook. Either `service` or `url` must be specified.
                            \n If the webhook is running within the cluster, then
                            you should use `service`."
                          properties:
                            name:
                              description: '`name` is the name of the service. Required'
                              type: string
                            namespace:
                              description: '`namespace` is the namespace of the service.
                                Required'
                              type: string
                            path:
                              description: '`path` is an optional URL path which will
                                be sent in any request to this service.'
                              type: string
                            port:
                              description: If specified, the port on the service that
                                hosting webhook. Default to 443 for backward compatibility.
                                `port` should be a valid port number (1-65535, inclusive).
                              format: int32
                              type: integer
                          required:
                          - name
                          - namespace
                          type: object
                        url:
                          description: "`url` gives the location of the webhook, in
                            standard URL form (`scheme://host:port/path`). Exactly
                            one of `url` or `service` must be specified. \n The `host`
                            should not refer to a service running in the cluster;
                            use the `service` field instead. The host might be resolved
                            via external DNS in some apiservers (e.g., `kube-apiserver`
                            cannot resolve in-cluster DNS as that would be a layering
                            violation). `host` may also be an IP address. \n Please
                            note that using `localhost` or `127.0.0.1` as a `host`
                            is risky unless you take great care to run this webhook
                            on all hosts which run an apiserver which might need to
                            make calls to this webhook. Such installs are likely to
                            be non-portable, i.e., not easy to turn up in a new cluster.
                            \n The scheme must be \"https\"; the URL must begin with
                            \"https://\". \n A path is optional, and if present may
                            be any string permissible in a URL. You may use the path
                            to pass an arbitrary string to the webhook, for example,
                            a cluster identifier. \n Attempting to use a user or basic
                            auth e.g. \"user:password@\" is not allowed. Fragments
                            (\"#...\") and query parameters (\"?...\") are not allowed,
                            either."
                          type: string
                      type: object
                    failurePolicy:
                      default: Fail
                      description: FailurePolicy defines how unrecognized errors from
                        the admission endpoint are handled - allowed values are Ignore
                        or Fail. Defaults to Fail.
                      type: string
                    matchPolicy:
                      default: Equivalent
                      description: matchPolicy defines how the "rules" list is used
                        to match incoming requests. Allowed values are "Exact" or
                        "Equivalent".
                      type: string
                    name:
                      description: Name is the name of the admission webhook.
                      type: string
                    objectSelector:
                      description: ObjectSelector decides whether to run the webhook
                        based on if the object has matching labels.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                    rules:
                      description: Rules describes what operations on what resources/subresources
                        the webhook cares about.
                      items:
                        description: RuleWithOperations is a tuple of Operations and
                          Resources. It is recommended to make sure that all the tuple
                          expansions are valid.
                        properties:
                          apiGroups:
                            description: APIGroups is the API groups the resources
                              belong to. '*' is all groups. If '*' is present, the
                              length of the slice must be one. Required.
                            items:
                              type: string
                            type: array
                          apiVersions:
                            description: APIVersions is the API versions the resources
                              belong to. '*' is all versions. If '*' is present, the
                              length of the slice must be one. Required.
                            items:
                              type: string
                            type: array
                          operations:
                            description: Operations is the operations the admission
                              hook cares about - CREATE, UPDATE, DELETE, CONNECT or
                              * for all of those operations and any future admission
                              operations that are added. If '*' is present, the length
                              of the slice must be one. Required.
                            items:
                              description: OperationType specifies an operation for
                                a request.
                              type: string
                            type: array
                          resources:
                            description: "Resources is a list of resources this rule
                              applies to. \n For example: 'pods' means pods. 'pods/log'
                              means the log subresource of pods. '*' means all resources,
                              but not subresources. 'pods/*' means all subresources
                              of pods. '*/scale' means all scale subresources. '*/*'
                              means all resources and their subresources. \n If wildcard
                              is present, the validation rule will ensure resources
                              do not overlap with each other. \n Depending on the
                              enclosing object, subresources might not be allowed.
                              Required."
                            items:
                              type: string
                            type: array
                          scope:
                            description: scope specifies the scope of this rule. Valid
                              values are "Cluster", "Namespaced", and "*" "Cluster"
                              means that only cluster-scoped resources will match
                              this rule. Namespace API objects are cluster-scoped.
                              "Namespaced" means that only namespaced resources will
                              match this rule. "*" means that there are no scope restrictions.
                              Subresources match the scope of their parent resource.
                              Default is "*".
                            type: string
                        type: object
                      type: array
                    sideEffects:
                      description: SideEffects states whether this webhook has side
                        effects.
                      type: string
                    timeoutSeconds:
                      default: 10
                      description: TimeoutSeconds specifies the timeout for this webhook.
                        After the timeout passes,
                      format: int32
                      type: integer
                  required:
                  - admissionReviewVersions
                  - clientConfig
                  - name
                  - sideEffects
                  type: object
                type: array
            type: object
          status:
            description: NamespacedValidatingWebhookStatus defines the observed state
              of NamespacedValidatingWebhook
            enum:
            - Applied
            type: string
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
